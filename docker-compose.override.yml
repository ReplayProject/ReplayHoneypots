# This file is for development and will not work with stack deploy

version: '3.8'

services:
    # Service to define how the manager gets built
    replay-manager:
        # Toggle to enable the service
        # entrypoint: ['echo', 'Service replay-manager disabled']

        build:
            context: './management'
            dockerfile: Dockerfile
            # dockerfile: Dockerfile.dev # Toggle for live mode
        environment:
            - NODE_ENV=development
            - PARCEL_WORKERS=1
        # Toggle these commands to start and pause without doing anything
        # Useful when you want to attach yourself manually to test things
        # Use these to edit how the image starts or deviate from baked in url
        # command: ['couchdb:5984', '--', 'tail', '-f', '/dev/null']
        # command: ["192.168.86.159:5984", "--", "npm", "run", "start-serve" ]
        # command: ["testingcouchdb:5984", "--", "npm", "run", "dev2" ]

        # Toggle the following 2 configs, and enable the "/src" & modules volume for what I call "live mode"
        # Like this, your code changes will sync into the container (may have to run npm i)
        # working_dir: /src/management/frontend
        # command: ["couchdb:5984", "--", "npm", "run", "dev2" ]

        # volumes:
            # Live mode, source files bind
            # - replay-src:/src
            # - ./management/frontend/node_modules:/src/node_modules # some containers do not like this option
        restart: 'no' # kept like this to show errors when failing

    # Service to define how the honeypots get built
    replay-honeypot:
        # Toggle to disable the service
        # entrypoint: ['echo', 'Service replay-honeypot disabled']

        # Toggle this commands to start and pause without doing anything
        # Useful when you want to attach yourself manually to test things
        # command: ['couchdb:5984', '--', 'tail', '-f', '/dev/null']

        # Port exposed because locally we cannot go into dev mode
        ports:
            - 9998:9998
            #- 1337:1337/udp
           # - 1337:1337
            - 8085:80
            - 2222:2222
        build:
            network: 'host'
            context: './honeypots'
            dockerfile: Dockerfile
        # Toggle this config, and the source volume below for dev mode (bind source code)
        working_dir: /src/honeypots/honeypot # comment to use bundled source code (needs fresh image)
        volumes:
            - ./config/default_hp_config.json:/default_hp_config.json
            - ./config/cert.pem:/cert.pem
            # volume for source code!
            - replay-src:/src
        restart: 'no'

# Let docker-compose manage this network
networks:
    # Host network, overridden to allow development access to other services
    hostnet:
        external: true
        name: honey-infra

volumes:
#     # This volume gives access to the source code for the system (runtime binding)
    replay-src:
        driver: local
        driver_opts:
            type: none
            device: .
            o: bind
